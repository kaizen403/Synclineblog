---
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/Layout.astro";

/* Check if the user is authenticated */
const auth = getAuth(app);
const sessionCookie = Astro.cookies.get("session").value;
if (sessionCookie) {
  const decodedCookie = await auth.verifySessionCookie(sessionCookie);
  if (decodedCookie) {
    return Astro.redirect("/posts");
  }
}
---

<Layout title="Sign in">
  <h1 class="w-full text-center font-lexend text-2xl tracking-wide font-blod">Sign In to Kaizen's blog</h1>	
	<form class="flex flex-col items-center bg-blue-black-gradient rounded shadow-lg p-12" action="/api/auth/signin" method="post">
    <label class="font-lexend text-s" for="email">Email</label>
    <input class="flex items-center h-12 px-4 w-64 bg-gray-200 mt-2 rounded focus:outline-none focus:ring-2" type="email" name="email" id="email">
    <label class="font-lexend text-s mt-3" for="password">Password</label>
    <input class="flex items-center h-12 px-4 w-64 bg-gray-200 mt-2 rounded focus:outline-none focus:ring-2" type="password" name="password" id="password">
    <button class="flex items-center justify-center h-12 px-6 w-64 bg-blue-600 mt-8 rounded font-semibold text-sm text-blue-100 hover:bg-blue-700" type="submit">Login</button>
    <div class="mt-2 mb-2 w-64 h-10 text-center">or</div>
    <button class="flex items-center justify-center h-12 px-6 w-64 bg-blue-600 rounded font-semibold text-sm text-blue-100 hover:bg-blue-700" id="google">Sign in with Google</button>
    <div class="flex mt-6 justify-center text-xs">
      <a class="text-blue-400 hover:text-blue-500" href="#">Forgot Password</a>
      <span class="mx-2 text-gray-300">/</span>
      <a class="text-blue-400 hover:text-blue-500" href="/register">Sign Up</a>
    </div>
  </form>
  
</Layout>

<script>
  import {
    getAuth,
    inMemoryPersistence,
    signInWithEmailAndPassword,
    GoogleAuthProvider,
    signInWithPopup,
  } from "firebase/auth";
  import { app } from "../firebase/client";

  const auth = getAuth(app);
  auth.setPersistence(inMemoryPersistence);

  const form = document.querySelector("form") as HTMLFormElement;
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();

    if (!email || !password) {
      return;
    }
    const userCredential = await signInWithEmailAndPassword(
      auth,
      email,
      password
    );
    const idToken = await userCredential.user.getIdToken();
    const response = await fetch("/api/auth/signin", {
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    });

    if (response.redirected) {
      window.location.assign(response.url);
    }
  });

  const googleSignin = document.querySelector("#google") as HTMLButtonElement;
  googleSignin.addEventListener("click", async () => {
    const provider = new GoogleAuthProvider();
    const userCredential = await signInWithPopup(auth, provider);
    const idToken = await userCredential.user.getIdToken();
    const res = await fetch("/api/auth/signin", {
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    });

    if (res.redirected) {
      window.location.assign(res.url);
    }
  });
</script>